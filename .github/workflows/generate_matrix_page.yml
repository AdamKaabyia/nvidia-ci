name: Generate test matrices pages

on:
  pull_request:
    branches:
      - main
    types: [opened, synchronize, reopened]

jobs:
  generate-matrix:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the PR branch
      - name: Checkout PR code
        uses: actions/checkout@v4
        with:
          ref: ${{ github.head_ref }}  # Ensure we checkout the PR branch (not main)

      # Step 2: Set up Python
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: 3.13

      # Step 3: Install dependencies
      - name: Install dependencies
        run: |
          pip install -r dashboard_matrix/requirements.txt  

      # Step 4: Run your extraction code (dashboard_matrix/pr_matrix.py)
      - name: Extract data
        run: |
          python dashboard_matrix/generate_test_matrix_data.py

      # Step 5: Get the updated JSON content
      - name: Get updated JSON data
        id: get_json
        run: |
          # Get the updated JSON content
          UPDATED_JSON=$(cat dashboard_matrix/ocp_data.json)
          echo "::set-output name=ocp_data::$UPDATED_JSON"

      # Step 6: Update the ocp_data.json file in the repo using GitHub API
      - name: Update ocp_data.json in the repo
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const content = '${{ steps.get_json.outputs.ocp_data }}';  // Get the JSON from the previous step
            const filePath = 'dashboard_matrix/ocp_data.json';  // Path to your file in the repo
            
            // GitHub API to update the file
            const { data: currentFile } = await github.rest.repos.getContent({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: filePath
            });

            const sha = currentFile.sha;  // Get the current file's SHA
            await github.rest.repos.createOrUpdateFileContents({
              owner: context.repo.owner,
              repo: context.repo.repo,
              path: filePath,
              message: 'Update ocp_data.json from workflow',
              content: Buffer.from(content).toString('base64'),
              sha: sha
            });

      # Step 7: Check the JSON file after modification
      - name: Check JSON after modification
        run: |
          cat dashboard_matrix/ocp_data.json

      # Step 8: Run HTML generation code
      - name: Generate HTML page
        run: |
          python dashboard_matrix/generate_test_matrix_ui.py

      # Step 9: Deploy the generated HTML page
      - name: Deploy ðŸš€
        uses: JamesIves/github-pages-deploy-action@v4
        with:
          branch: gh-pages         # The branch the action should deploy to.
          folder: dashboard_matrix/output  # The folder the action should deploy.
          token: ${{ secrets.GITHUB_TOKEN }}
